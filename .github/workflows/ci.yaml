name: "CI"

on:
  push:
    branches:
      - "*"
      - "*/*/*"
    paths-ignore:
      - "k8s/fastapi.yaml"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "k8s/fastapi.yaml"

permissions:
  contents: write
  actions: read

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-python-uv-venv-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-python-uv-venv-

      - name: Install dependencies
        run: |
          pip install uv
          uv sync
          uv pip install uv

      - name: Slack webhook
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: fastapi-cookbook
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          if_mention: failure,cancelled
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_CHECK }}
        if: always()

  lint:
    name: Lint
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-python-uv-venv-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-python-uv-venv-

      - name: Check type, lint, format
        run: |
          source .venv/bin/activate
          make lint

      - name: Slack webhook
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: fastapi-cookbook
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          if_mention: failure,cancelled
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_CHECK }}
        if: always()

  test-sqlite:
    name: Test SQLite
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-python-uv-venv-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-python-uv-venv-

      - name: Run pytest
        run: |
          source .venv/bin/activate
          make test

      - name: Upload test results to Codecov
        uses: codecov/test-results-action@v1
        with:
          flags: sqlite
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          flags: sqlite
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Slack webhook
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: fastapi-cookbook
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          if_mention: failure,cancelled
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_CHECK }}
        if: always()

  test-mysql:
    env:
      DB_ROOT: "password"
      DB_TYPE: "mysql"
      DB_DRIVER: "mysqldb"
      DB_HOST: "127.0.0.1"
      DB_PORT: 3306
      DB_USER: "test"
      DB_PASSWORD: "test"
      DB_NAME: "test"
      DB_TABLE_CREATE: true
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.DB_ROOT }}
          # WARN: mysql:8.0 사용 시 MYSQL_PWD를 설정하면 아래 오류가 발생한다.
          # ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)
          # MYSQL_PWD: ${{ env.DB_ROOT }}
          MYSQL_USER: ${{ env.DB_USER }}
          MYSQL_PASSWORD: ${{ env.DB_PASSWORD}}
          MYSQL_DATABASE: ${{ env.DB_NAME }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin -h 127.0.0.1 ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    name: Test MySQL
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-python-uv-venv-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-python-uv-venv-

      # NOTE: 기본적으로 GitHub Actions의 Ubuntu에는 아래 의존성이 설치된 것으로 확인
      # - name: Install MySQL dependencies
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install default-libmysqlclient-dev build-essential pkg-config -y

      - name: Run pytest
        run: |
          source .venv/bin/activate
          make test

      - name: Upload test results to Codecov
        uses: codecov/test-results-action@v1
        with:
          flags: mysql
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          flags: mysql
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Slack webhook
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: fastapi-cookbook
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          if_mention: failure,cancelled
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_CHECK }}
        if: always()
